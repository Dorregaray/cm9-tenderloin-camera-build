diff --git a/libs/ui/OverlayHtc.cpp b/libs/ui/OverlayHtc.cpp
index f1d01da..c7a5456 100644
--- a/libs/ui/OverlayHtc.cpp
+++ b/libs/ui/OverlayHtc.cpp
@@ -31,6 +31,7 @@ Overlay::Overlay(overlay_set_fd_hook set_fd,
         void *data)
     : mStatus(NO_INIT)
 {
+    LOGI("%s", __FUNCTION__);
     set_fd_hook = set_fd;
     set_crop_hook = set_crop;
     queue_buffer_hook = queue_buffer;
@@ -39,15 +40,18 @@ Overlay::Overlay(overlay_set_fd_hook set_fd,
 }
 
 Overlay::~Overlay() {
+    LOGI("%s", __FUNCTION__);
 }
 
 status_t Overlay::dequeueBuffer(void** buffer)
 {
+    LOGI("%s", __FUNCTION__);
     return mStatus;
 }
 
 status_t Overlay::queueBuffer(void* buffer)
 {
+    LOGI("%s", __FUNCTION__);
     if (queue_buffer_hook)
         queue_buffer_hook(hook_data, buffer);
     return mStatus;
@@ -55,16 +59,19 @@ status_t Overlay::queueBuffer(void* buffer)
 
 status_t Overlay::resizeInput(uint32_t width, uint32_t height)
 {
+    LOGI("%s", __FUNCTION__);
     return mStatus;
 }
 
 status_t Overlay::setParameter(int param, int value)
 {
+    LOGI("%s", __FUNCTION__);
     return mStatus;
 }
 
 status_t Overlay::setCrop(uint32_t x, uint32_t y, uint32_t w, uint32_t h)
 {
+    LOGI("%s", __FUNCTION__);
     if (set_crop_hook)
         set_crop_hook(hook_data, x, y, w, h);
     return mStatus;
@@ -73,6 +80,7 @@ status_t Overlay::setCrop(uint32_t x, uint32_t y, uint32_t w, uint32_t h)
 #ifdef OMAP_ENHANCEMENT
     status_t Overlay::set_s3d_params(int32_t s3d_mode, uint32_t s3d_fmt, uint32_t s3d_order, uint32_t s3d_subsampling)
     {
+    LOGI("%s", __FUNCTION__);
         return mStatus;
         return mOverlayData->set_s3d_params(mOverlayData, s3d_mode, s3d_fmt, s3d_order, s3d_subsampling);
     }
@@ -80,11 +88,13 @@ status_t Overlay::setCrop(uint32_t x, uint32_t y, uint32_t w, uint32_t h)
 
 status_t Overlay::getCrop(uint32_t* x, uint32_t* y, uint32_t* w, uint32_t* h)
 {
+    LOGI("%s", __FUNCTION__);
     return mStatus;
 }
 
 status_t Overlay::setFd(int fd)
 {
+    LOGI("%s", __FUNCTION__);
     if (set_fd_hook)
         set_fd_hook(hook_data, fd);
     return mStatus;
@@ -92,43 +102,52 @@ status_t Overlay::setFd(int fd)
 
 int32_t Overlay::getBufferCount() const
 {
+    LOGI("%s", __FUNCTION__);
     return 0;
 }
 
 void* Overlay::getBufferAddress(void* buffer)
 {
+    LOGI("%s", __FUNCTION__);
     return 0;
 }
 
-void Overlay::destroy() {  
+void Overlay::destroy() {
 }
 
 status_t Overlay::getStatus() const {
+    LOGI("%s", __FUNCTION__);
     return mStatus;
 }
 
 void* Overlay::getHandleRef() const {
+    LOGI("%s", __FUNCTION__);
     return 0;
 }
 
 uint32_t Overlay::getWidth() const {
-    return 0;
+    LOGI("%s", __FUNCTION__);
+    return -1;
 }
 
 uint32_t Overlay::getHeight() const {
-    return 0;
+    LOGI("%s", __FUNCTION__);
+    return -1;
 }
 
 int32_t Overlay::getFormat() const {
+    LOGI("%s", __FUNCTION__);
     return 0;
 }
 
 int32_t Overlay::getWidthStride() const {
-    return 0;
+    LOGI("%s", __FUNCTION__);
+    return -1;
 }
 
 int32_t Overlay::getHeightStride() const {
-    return 0;
+    LOGI("%s", __FUNCTION__);
+    return -1;
 }
 
 // ----------------------------------------------------------------------------
